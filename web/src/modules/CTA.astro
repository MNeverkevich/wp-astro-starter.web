---
const { title, description, button_group } = Astro.props.data;

interface Button {
  title: string;
  url: string;
  target: string;
}

---

<section class="text-gray-600 body-font bg-gray-50">
  <div class="container px-5 py-24 mx-auto">
    <div class="flex flex-col text-center w-full mb-12">
      { title && <h2 class="sm:text-3xl text-2xl font-medium title-font mb-4 text-gray-900">{ title }</h2> }
      { description && <p class="lg:w-2/3 mx-auto leading-relaxed text-base">{ description }</p> }
      { button_group?.length > 0 && (
        <>
          <div class="flex gap-4 justify-center mt-8">
            {button_group.map(({ button }: { button: Button }, index: number) => (
              <a
                href={button.url}
                target={button.target}
                class={`inline-flex border-0 py-2 px-6 focus:outline-none rounded text-lg ${
                  index === 0
                    ? "text-white bg-indigo-500 hover:bg-indigo-600"
                    : "text-black bg-gray-100 hover:bg-gray-200"
                }`}
              >
                {button.title}
              </a>
            ))}
          </div>
        </>
      ) }
    </div>
  </div>
</section>
